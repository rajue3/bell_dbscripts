
CREATE procedure BELL_INC_UPD_LS_ITEMS_NEW    
@BILLDATE as DATE,    
@AREA as varchar(30),    
@ITEMCODE AS integer,    
@ITEMNAME AS VARCHAR(30),    
@PRICE AS VARCHAR(5),    
@QTY AS VARCHAR(10),    
@T_B AS integer,    
@R_B AS INTeger,    
@D_B AS integer,    
@USERNAME AS VARCHAR(30),    
@result int OUTPUT    
    
AS                 
BEGIN    
 SET @result = 0  
 set @BILLDATE = CONVERT(varchar(10),@BILLDATE,101)    
 DECLARE @PREVIOUS_PACKETS AS INTEGER,@NEW_PACKETS AS INTEGER  
 SET @NEW_PACKETS = @T_B - @R_B - @D_B  
  iF (SELECT COUNT(1) FROM BELL_LS WHERE ITEMCODE=@ITEMCODE AND ITEMNAME=@ITEMNAME AND AREA=@AREA AND CONVERT(varchar(10),BILLDATE,101) = @BILLDATE) = 0     
 BEGIN    
  PRINT 'NO COUNT'    
   insert into BELL_LS (ITEMCODE,ITEMNAME,RATE,QTY,BILLDATE,AREA,USERNAME,T_B,R_B,D_B)     
   values(@ITEMCODE,@ITEMNAME,@PRICE,@QTY,@BILLDATE,@AREA,@USERNAME,@T_B,@R_B,@D_B)    
  
 UPDATE BELL_ITEMMASTER SET STOCK=STOCK-@NEW_PACKETS,USERNAME=@USERNAME,ACTIONDATE=GETDATE() WHERE ITEMCODE=@ITEMCODE AND ITEMNAME=@ITEMNAME  
  
  END    
  ELSE    
  BEGIN    
    PRINT 'RECORD EXIST'  
    SELECT @PREVIOUS_PACKETS=T_B-R_B-D_B FROM BELL_LS WHERE ITEMCODE=@ITEMCODE AND ITEMNAME=@ITEMNAME AND AREA=@AREA AND CONVERT(varchar(10),BILLDATE,101) = @BILLDATE    
  
    UPDATE BELL_LS SET RATE=@PRICE,QTY=@QTY,USERNAME=@USERNAME,T_B=@T_B,R_B=@R_B,D_B=@D_B WHERE    
        ITEMCODE=@ITEMCODE AND ITEMNAME=@ITEMNAME AND AREA=@AREA AND CONVERT(varchar(10),BILLDATE,101) = @BILLDATE            
  
 --update stock value in ItemMaster, by removing previous stock and updating with new value   
 UPDATE BELL_ITEMMASTER SET STOCK=STOCK + @PREVIOUS_PACKETS - @NEW_PACKETS,USERNAME=@USERNAME,ACTIONDATE=GETDATE() WHERE ITEMCODE=@ITEMCODE AND ITEMNAME=@ITEMNAME  
  END    
    SET @result = 1    
   SELECT @result AS RESULT    
END 